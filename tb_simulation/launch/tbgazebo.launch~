<?xml version="1.0"?>

<launch>
  <!-- Initialize Parameters -->
  	<arg name="x" default="2"/>
  	<arg name="y" default="2"/>
  	<arg name="z" default="0"/>
	<arg name="world" default="hospital" /> <!-- factorty, hotel...-->
	<arg name="headless" default="false" />
 	<arg name="world_file"  default="$(find tb_simulation)/worlds/$(arg world).sdf"/>
  	<arg name="base"      value="$(optenv TURTLEBOT_BASE kobuki)"/> <!-- Could add different base manually -->
  	<arg name="battery"   value="$(optenv TURTLEBOT_BATTERY /proc/acpi/battery/BAT0)"/>  <!-- /proc/acpi/battery/BAT0 --> 
  	<arg name="stacks"    value="$(optenv TURTLEBOT_STACKS hexagons)"/>  <!-- circles, hexagons --> 
  	<arg name="3d_sensor" value="$(optenv TURTLEBOT_3D_SENSOR kinect)"/>  <!-- kinect, asus_xtion_pro --> 
  	<arg name="gui" default="true"/>

  	<include file="$(find gazebo_ros)/launch/empty_world.launch">
    	  <arg name="use_sim_time" value="true"/>
    	  <arg name="debug" value="false"/>
    	  <arg name="gui" value="$(arg gui)" />
    	  <arg name="world_name" value="$(arg world_file)"/>
  	</include>

  <!-- Robot Spawner -->
	<include file="$(find tb_simulation)/launch/includes/$(arg base).launch.xml">
    	  <arg name="base" value="$(arg base)"/>
    	  <arg name="stacks" value="$(arg stacks)"/>
    	  <arg name="3d_sensor" value="$(arg 3d_sensor)"/>
  	  <arg name="x" value="$(arg x)"/>
  	  <arg name="y" value="$(arg y)"/>
  	  <arg name="z" value="$(arg z)"/>
  	</include>

  	<node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
	  <param name="publish_frequency" type="double" value="30.0" />
  	</node>

	<include file="$(find tb_simulation)/launch/amcl_demo.launch">
		<arg name="map_file"  default="$(find rqt_ltl)/map/$(arg world)/map.yaml"/>
		<arg name="initial_pose_x" default="$(arg x)"/>
  		<arg name="initial_pose_y" default="$(arg y)"/>
  		<arg name="initial_pose_a" default="0"/>
	</include>

  <!-- Fake laser -->

  	<node pkg="nodelet" type="nodelet" name="laserscan_nodelet_manager" args="manager"/>
  	<node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan"
        	  args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet laserscan_nodelet_manager">
    		<param name="scan_height" value="10"/>
    		<param name="output_frame_id" value="/camera_depth_frame"/>
    		<param name="range_min" value="0.45"/>
    		<remap from="image" to="/camera/depth/image_raw"/>
    		<remap from="scan" to="/scan"/>
  	</node>

</launch>
